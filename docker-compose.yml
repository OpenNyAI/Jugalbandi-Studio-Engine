services:
  # Jugalbandi Manager
  api:
    build:
      context: ../Jugalbandi-Manager
      dockerfile: ./api/Dockerfile
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_DATABASE_NAME=${POSTGRES_DATABASE_NAME}
      - POSTGRES_DATABASE_USERNAME=${POSTGRES_DATABASE_USERNAME}
      - POSTGRES_DATABASE_PASSWORD=${POSTGRES_DATABASE_PASSWORD}
      - POSTGRES_DATABASE_HOST=${POSTGRES_DATABASE_HOST}
      - POSTGRES_DATABASE_PORT=${POSTGRES_DATABASE_PORT}
      - KAFKA_BROKER=${KAFKA_BROKER}
      - KAFKA_USE_SASL=${KAFKA_USE_SASL}
      - KAFKA_PRODUCER_USERNAME=${KAFKA_PRODUCER_USERNAME}
      - KAFKA_PRODUCER_PASSWORD=${KAFKA_PRODUCER_PASSWORD}
      - KAFKA_CHANNEL_TOPIC=${KAFKA_CHANNEL_TOPIC}
      - KAFKA_FLOW_TOPIC=${KAFKA_FLOW_TOPIC}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - WA_API_HOST=${WA_API_HOST}
    depends_on:
      - kafka
      - postgres
  language:
    build:
      context: ../Jugalbandi-Manager
      dockerfile: ./language/Dockerfile
    environment:
      - POSTGRES_DATABASE_NAME=${POSTGRES_DATABASE_NAME}
      - POSTGRES_DATABASE_USERNAME=${POSTGRES_DATABASE_USERNAME}
      - POSTGRES_DATABASE_PASSWORD=${POSTGRES_DATABASE_PASSWORD}
      - POSTGRES_DATABASE_HOST=${POSTGRES_DATABASE_HOST}
      - POSTGRES_DATABASE_PORT=${POSTGRES_DATABASE_PORT}
      - KAFKA_BROKER=${KAFKA_BROKER}
      - KAFKA_USE_SASL=${KAFKA_USE_SASL}
      - KAFKA_PRODUCER_USERNAME=${KAFKA_PRODUCER_USERNAME}
      - KAFKA_PRODUCER_PASSWORD=${KAFKA_PRODUCER_PASSWORD}
      - KAFKA_CONSUMER_USERNAME=${KAFKA_CONSUMER_USERNAME}
      - KAFKA_CONSUMER_PASSWORD=${KAFKA_CONSUMER_PASSWORD}
      - KAFKA_FLOW_TOPIC=${KAFKA_FLOW_TOPIC}
      - KAFKA_CHANNEL_TOPIC=${KAFKA_CHANNEL_TOPIC}
      - KAFKA_LANGUAGE_TOPIC=${KAFKA_LANGUAGE_TOPIC}
      - BHASHINI_USER_ID=${BHASHINI_USER_ID}
      - BHASHINI_API_KEY=${BHASHINI_API_KEY}
      - BHASHINI_PIPELINE_ID=${BHASHINI_PIPELINE_ID}
      - AZURE_SPEECH_KEY=${AZURE_SPEECH_KEY}
      - AZURE_SPEECH_REGION=${AZURE_SPEECH_REGION}
      - AZURE_TRANSLATION_KEY=${AZURE_TRANSLATION_KEY}
      - AZURE_TRANSLATION_RESOURCE_LOCATION=${AZURE_TRANSLATION_RESOURCE_LOCATION}
      - STORAGE_TYPE=${STORAGE_TYPE}
      - AZURE_STORAGE_ACCOUNT_URL=${AZURE_STORAGE_ACCOUNT_URL}
      - AZURE_STORAGE_ACCOUNT_KEY=${AZURE_STORAGE_ACCOUNT_KEY}
      - AZURE_STORAGE_CONTAINER=${AZURE_STORAGE_CONTAINER}
      - PUBLIC_URL_PREFIX=${PUBLIC_URL_PREFIX}
    depends_on:
      - kafka
      - postgres
    volumes:
      - ./media:/mnt/jb_files
  flow:
    build:
      context: ../Jugalbandi-Manager
      dockerfile: ./flow/Dockerfile
    environment:
      - POSTGRES_DATABASE_NAME=${POSTGRES_DATABASE_NAME}
      - POSTGRES_DATABASE_USERNAME=${POSTGRES_DATABASE_USERNAME}
      - POSTGRES_DATABASE_PASSWORD=${POSTGRES_DATABASE_PASSWORD}
      - POSTGRES_DATABASE_HOST=${POSTGRES_DATABASE_HOST}
      - POSTGRES_DATABASE_PORT=${POSTGRES_DATABASE_PORT}
      - KAFKA_BROKER=${KAFKA_BROKER}
      - KAFKA_USE_SASL=${KAFKA_USE_SASL}
      - KAFKA_PRODUCER_USERNAME=${KAFKA_PRODUCER_USERNAME}
      - KAFKA_PRODUCER_PASSWORD=${KAFKA_PRODUCER_PASSWORD}
      - KAFKA_CONSUMER_USERNAME=${KAFKA_CONSUMER_USERNAME}
      - KAFKA_CONSUMER_PASSWORD=${KAFKA_CONSUMER_PASSWORD}
      - KAFKA_FLOW_TOPIC=${KAFKA_FLOW_TOPIC}
      - KAFKA_CHANNEL_TOPIC=${KAFKA_CHANNEL_TOPIC}
      - KAFKA_LANGUAGE_TOPIC=${KAFKA_LANGUAGE_TOPIC}
      - KAFKA_RAG_TOPIC=${KAFKA_RAG_TOPIC}
      - AZURE_STORAGE_ACCOUNT_URL=${AZURE_STORAGE_ACCOUNT_URL}
      - AZURE_STORAGE_ACCOUNT_KEY=${AZURE_STORAGE_ACCOUNT_KEY}
      - AZURE_STORAGE_CONTAINER=${AZURE_STORAGE_CONTAINER}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
    depends_on:
      - kafka
      - postgres
    volumes:
      - ./media:/mnt/jb_files
  indexer:
    build:
      context: ../Jugalbandi-Manager
      dockerfile: ./indexer/Dockerfile
    environment:
      - KAFKA_BROKER=${KAFKA_BROKER}
      - KAFKA_USE_SASL=${KAFKA_USE_SASL}
      - KAFKA_CONSUMER_TOPIC=indexer
      - KAFKA_PRODUCER_FLOW_TOPIC=flow
      - POSTGRES_DATABASE_NAME=${POSTGRES_DATABASE_NAME}
      - POSTGRES_DATABASE_USERNAME=${POSTGRES_DATABASE_USERNAME}
      - POSTGRES_DATABASE_PASSWORD=${POSTGRES_DATABASE_PASSWORD}
      - POSTGRES_DATABASE_HOST=${POSTGRES_DATABASE_HOST}
      - POSTGRES_DATABASE_PORT=${POSTGRES_DATABASE_PORT}
      - OPENAI_API_TYPE=${OPENAI_API_TYPE}
      - AZURE_DEPLOYMENT_NAME=${AZURE_DEPLOYMENT_NAME}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DOCUMENT_LOCAL_STORAGE_PATH=./data
    depends_on:
      - kafka
      - postgres
  retriever:
    build:
      context: ../Jugalbandi-Manager
      dockerfile: ./retriever/Dockerfile
    environment:
      - KAFKA_BROKER=${KAFKA_BROKER}
      - KAFKA_USE_SASL=${KAFKA_USE_SASL}
      - KAFKA_RAG_TOPIC=${KAFKA_RAG_TOPIC}
      - KAFKA_FLOW_TOPIC=${KAFKA_FLOW_TOPIC}
      - KAFKA_PRODUCER_USERNAME=${KAFKA_PRODUCER_USERNAME}
      - KAFKA_PRODUCER_PASSWORD=${KAFKA_PRODUCER_PASSWORD}
      - KAFKA_CONSUMER_USERNAME=${KAFKA_CONSUMER_USERNAME}
      - KAFKA_CONSUMER_PASSWORD=${KAFKA_CONSUMER_PASSWORD}
      - POSTGRES_DATABASE_NAME=${POSTGRES_DATABASE_NAME}
      - POSTGRES_DATABASE_USERNAME=${POSTGRES_DATABASE_USERNAME}
      - POSTGRES_DATABASE_PASSWORD=${POSTGRES_DATABASE_PASSWORD}
      - POSTGRES_DATABASE_HOST=${POSTGRES_DATABASE_HOST}
      - POSTGRES_DATABASE_PORT=${POSTGRES_DATABASE_PORT}
      - OPENAI_API_TYPE=${OPENAI_API_TYPE}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_DEPLOYMENT_NAME=${AZURE_DEPLOYMENT_NAME}
    depends_on:
      - kafka
      - postgres
  channel:
    build:
      context: ../Jugalbandi-Manager
      dockerfile: ./channel/Dockerfile
    environment:
      - POSTGRES_DATABASE_NAME=${POSTGRES_DATABASE_NAME}
      - POSTGRES_DATABASE_USERNAME=${POSTGRES_DATABASE_USERNAME}
      - POSTGRES_DATABASE_PASSWORD=${POSTGRES_DATABASE_PASSWORD}
      - POSTGRES_DATABASE_HOST=${POSTGRES_DATABASE_HOST}
      - POSTGRES_DATABASE_PORT=${POSTGRES_DATABASE_PORT}
      - KAFKA_BROKER=${KAFKA_BROKER}
      - KAFKA_USE_SASL=${KAFKA_USE_SASL}
      - KAFKA_PRODUCER_USERNAME=${KAFKA_PRODUCER_USERNAME}
      - KAFKA_PRODUCER_PASSWORD=${KAFKA_PRODUCER_PASSWORD}
      - KAFKA_LANGUAGE_TOPIC=${KAFKA_LANGUAGE_TOPIC}
      - KAFKA_FLOW_TOPIC=${KAFKA_FLOW_TOPIC}
      - KAFKA_CHANNEL_TOPIC=${KAFKA_CHANNEL_TOPIC}
      - KAFKA_CONSUMER_USERNAME=${KAFKA_CONSUMER_USERNAME}
      - KAFKA_CONSUMER_PASSWORD=${KAFKA_CONSUMER_PASSWORD}
      - AZURE_STORAGE_ACCOUNT_URL=${AZURE_STORAGE_ACCOUNT_URL}
      - AZURE_STORAGE_ACCOUNT_KEY=${AZURE_STORAGE_ACCOUNT_KEY}
      - AZURE_STORAGE_CONTAINER=${AZURE_STORAGE_CONTAINER}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY}
      - STORAGE_TYPE=${STORAGE_TYPE}
      - PUBLIC_URL_PREFIX=${PUBLIC_URL_PREFIX}
      - WA_API_HOST=${WA_API_HOST}
    depends_on:
      - kafka
      - postgres
    volumes:
      - ./media:/mnt/jb_files
  frontend:
    build:
      context: ../Jugalbandi-Manager
      dockerfile: ./frontend/Dockerfile
    ports:
      - "4179:4179"
    environment:
      - VITE_SERVER_HOST=${SERVER_HOST}
    # depends_on:
    #   - api
  
  postgres:
    image: ankane/pgvector
    ports:
      - "5432:5432"
    environment:
      #   POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    #   POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./combined_dump.sql:/docker-entrypoint-initdb.d/dump.sql
  postgres-adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080
  metabase:
    image: metabase/metabase:latest
    ports:
      - "9000:9000"
  kafka:
    image: docker.io/bitnami/kafka:3.6
    ports:
      - "9092:19092"
    volumes:
      - "kafka_data:/bitnami"
      - ./scripts/create-all-topics.sh:/usr/bin/create-topics.sh
    command: "sh -c './run.sh & /usr/bin/create-topics.sh && tail -f /dev/null'"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      # Listeners
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:19092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://${JBHOST}:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
  # PwR Studio
  server:
    build:
      context: ../PwR-Studio
      dockerfile: ./server/Dockerfile
    command: uvicorn app.main:app --workers 1 --host 0.0.0.0 --port 3000
    restart: unless-stopped
    ports:
      - "3000:3000"
    volumes:
      - ./server/app:/code/server/app
    environment:
      - DB_CONNECTION_STRING=postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=${DB_HOST}
      - DB_PORT=${DB_PORT}
      - KAFKA_BROKER=${KAFKA_BROKER}
      - KAFKA_USE_SASL=${KAFKA_USE_SASL}
      - KAFKA_PRODUCER_USERNAME=${KAFKA_PRODUCER_USERNAME}
      - KAFKA_PRODUCER_PASSWORD=${KAFKA_PRODUCER_PASSWORD}
      - KAFKA_CONSUMER_USERNAME=${KAFKA_CONSUMER_USERNAME}
      - KAFKA_CONSUMER_PASSWORD=${KAFKA_CONSUMER_PASSWORD}
      - KAFKA_ENGINE_TOPIC=${KAFKA_ENGINE_TOPIC}
      - AAD_APP_CLIENT_ID=${AAD_APP_CLIENT_ID}
      - AAD_APP_TENANT_ID=${AAD_APP_TENANT_ID}
      - ISSUER=${ISSUER}
      - SERVER_HOST=${PWR_SERVER_HOST}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
      # Add all Azure OpenAI keys
    depends_on:
      - postgres
      - kafka
  studio:
    build:
      context: ../PwR-Studio
      dockerfile: ./studio/Dockerfile
    restart: unless-stopped
    environment:
      - VITE_REACT_APP_AAD_APP_CLIENT_ID=${AAD_APP_CLIENT_ID}
      - VITE_REACT_APP_AAD_APP_TENANT_ID=${AAD_APP_TENANT_ID}
      - VITE_REACT_APP_AAD_APP_REDIRECT_URI=${AAD_APP_REDIRECT_URI}
      - VITE_REACT_APP_AAD_APP_SCOPE_URI=${AAD_APP_SCOPE_URI}
      - VITE_REACT_APP_SERVER_HOST=${SERVER_HOST}
      - VITE_REACT_APP_INSIGHTS_KEY=${APPINSIGHTS_INSTRUMENTATIONKEY}
      - VITE_REACT_EDITOR=code
    ports:
      - "4173:4173"
    depends_on:
      - server
  engine:
    image: jbengine:${JB_ENGINE_VERSION}
    restart: unless-stopped
    environment:
      - KAFKA_BROKER=${KAFKA_BROKER}
      - KAFKA_USE_SASL=${KAFKA_USE_SASL}
      - KAFKA_PRODUCER_USERNAME=${KAFKA_PRODUCER_USERNAME}
      - KAFKA_PRODUCER_PASSWORD=${KAFKA_PRODUCER_PASSWORD}
      - KAFKA_CONSUMER_USERNAME=${KAFKA_CONSUMER_USERNAME}
      - KAFKA_CONSUMER_PASSWORD=${KAFKA_CONSUMER_PASSWORD}
      - KAFKA_ENGINE_TOPIC=${KAFKA_ENGINE_TOPIC}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - AZURE_OPENAI_API_KEY=${AZURE_OPENAI_API_KEY}
      - AZURE_OPENAI_API_VERSION=${AZURE_OPENAI_API_VERSION}
      - AZURE_OPENAI_ENDPOINT=${AZURE_OPENAI_ENDPOINT}
    depends_on:
      - kafka

volumes:
  kafka_data:
    driver: local
  postgres_data:
    driver: local
